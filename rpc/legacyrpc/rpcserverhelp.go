// AUTOGENERATED by internal/rpchelp/genrpcserverhelp.go; do not edit.

package legacyrpc

func helpDescsEnUS() map[string]string {
	return map[string]string{
		"getbalance":              "getbalance (\"account\" minconf=1)\n\nCalculates and returns the balance of one or all accounts.\n\nArguments:\n1. account (string, optional)             DEPRECATED -- The account name to query the balance for, or \"*\" to consider all accounts (default=\"*\")\n2. minconf (numeric, optional, default=1) Minimum number of block confirmations required before an unspent output's value is included in the balance\n\nResult:\n\"value\" (string) The balance of 'account' valued in bitcoin\n",
		"getbestblockhash":        "getbestblockhash\n\nReturns the hash of the newest block in the best chain that wallet has finished syncing with.\n\nArguments:\nNone\n\nResult:\n\"value\" (string) The hash of the most recent synced-to block\n",
		"getblockcount":           "getblockcount\n\nReturns the blockchain height of the newest block in the best chain that wallet has finished syncing with.\n\nArguments:\nNone\n\nResult:\nn.nnn (numeric) The blockchain height of the most recent synced-to block\n",
		"getinfo":                 "getinfo\n\nReturns a JSON object containing various state info.\n\nArguments:\nNone\n\nResult:\n{\n \"version\": n,          (numeric) The version of the server\n \"protocolversion\": n,  (numeric) The latest supported protocol version\n \"walletversion\": n,    (numeric) The version of the address manager database\n \"balance\": n.nnn,      (numeric) The balance of all accounts calculated with one block confirmation\n \"blocks\": n,           (numeric) The number of blocks processed\n \"timeoffset\": n,       (numeric) The time offset\n \"connections\": n,      (numeric) The number of connected peers\n \"proxy\": \"value\",      (string)  The proxy used by the server\n \"difficulty\": n.nnn,   (numeric) The current target difficulty\n \"testnet\": true|false, (boolean) Whether or not server is using testnet\n \"keypoololdest\": n,    (numeric) Unset\n \"keypoolsize\": n,      (numeric) Unset\n \"unlocked_until\": n,   (numeric) Unset\n \"paytxfee\": n.nnn,     (numeric) The increment used each time more fee is required for an authored transaction\n \"relayfee\": n.nnn,     (numeric) The minimum relay fee for non-free transactions in BTC/KB\n \"errors\": \"value\",     (string)  Any current errors\n}                       \n",
		"gettransaction":          "gettransaction \"txid\" (includewatchonly=false)\n\nReturns a JSON object with details regarding a transaction relevant to this wallet.\n\nArguments:\n1. txid             (string, required)                 Hash of the transaction to query\n2. includewatchonly (boolean, optional, default=false) Also consider transactions involving watched addresses\n\nResult:\n{\n \"amount\": n.nnn,                  (numeric)         The total amount this transaction credits to the wallet, valued in bitcoin\n \"fee\": n.nnn,                     (numeric)         The total input value minus the total output value, or 0 if 'txid' is not a sent transaction\n \"confirmations\": n,               (numeric)         The number of block confirmations of the transaction\n \"blockhash\": \"value\",             (string)          The hash of the block this transaction is mined in, or the empty string if unmined\n \"blockindex\": n,                  (numeric)         Unset\n \"blocktime\": n,                   (numeric)         The Unix time of the block header this transaction is mined in, or 0 if unmined\n \"txid\": \"value\",                  (string)          The transaction hash\n \"walletconflicts\": [\"value\",...], (array of string) Unset\n \"time\": n,                        (numeric)         The earliest Unix time this transaction was known to exist\n \"timereceived\": n,                (numeric)         The earliest Unix time this transaction was known to exist\n \"details\": [{                     (array of object) Additional details for each recorded wallet credit and debit\n  \"account\": \"value\",              (string)          DEPRECATED -- Unset\n  \"address\": \"value\",              (string)          The address an output was paid to, or the empty string if the output is nonstandard or this detail is regarding a transaction input\n  \"amount\": n.nnn,                 (numeric)         The amount of a received output\n  \"category\": \"value\",             (string)          The kind of detail: \"send\" for sent transactions, \"immature\" for immature coinbase outputs, \"generate\" for mature coinbase outputs, or \"recv\" for all other received outputs\n  \"involveswatchonly\": true|false, (boolean)         Unset\n  \"fee\": n.nnn,                    (numeric)         The included fee for a sent transaction\n  \"vout\": n,                       (numeric)         The transaction output index\n },...],                                             \n \"hex\": \"value\",                   (string)          The transaction encoded as a hexadecimal string\n}                                  \n",
		"help":                    "help (\"command\")\n\nReturns a list of all commands or help for a specified command.\n\nArguments:\n1. command (string, optional) The command to retrieve help for\n\nResult (no command provided):\n\"value\" (string) List of commands\n\nResult (command specified):\n\"value\" (string) Help for specified command\n",
		"keypoolrefill":           "keypoolrefill (newsize=100)\n\nDEPRECATED -- This request does nothing since no keypool is maintained.\n\nArguments:\n1. newsize (numeric, optional, default=100) Unused\n\nResult:\nNothing\n",
		"listlockunspent":         "listlockunspent\n\nReturns a JSON array of outpoints marked as locked (with lockunspent) for this wallet session.\n\nArguments:\nNone\n\nResult:\n[{\n \"txid\": \"value\", (string)  The transaction hash of the referenced output\n \"vout\": n,       (numeric) The output index of the referenced output\n},...]\n",
		"listreceivedbyaccount":   "listreceivedbyaccount (minconf=1 includeempty=false includewatchonly=false)\n\nDEPRECATED -- Returns a JSON array of objects listing all accounts and the total amount received by each account.\n\nArguments:\n1. minconf          (numeric, optional, default=1)     Minimum number of block confirmations required before a transaction is considered\n2. includeempty     (boolean, optional, default=false) Unused\n3. includewatchonly (boolean, optional, default=false) Unused\n\nResult:\n[{\n \"account\": \"value\", (string)  The name of the account\n \"amount\": n.nnn,    (numeric) Total amount received by payment addresses of the account valued in bitcoin\n \"confirmations\": n, (numeric) Number of block confirmations of the most recent transaction relevant to the account\n},...]\n",
		"listreceivedbyaddress":   "listreceivedbyaddress (minconf=1 includeempty=false includewatchonly=false)\n\nReturns a JSON array of objects listing wallet payment addresses and their total received amounts.\n\nArguments:\n1. minconf          (numeric, optional, default=1)     Minimum number of block confirmations required before a transaction is considered\n2. includeempty     (boolean, optional, default=false) Unused\n3. includewatchonly (boolean, optional, default=false) Unused\n\nResult:\n[{\n \"account\": \"value\",              (string)          DEPRECATED -- Unset\n \"address\": \"value\",              (string)          The payment address\n \"amount\": n.nnn,                 (numeric)         Total amount received by the payment address valued in bitcoin\n \"confirmations\": n,              (numeric)         Number of block confirmations of the most recent transaction relevant to the address\n \"txids\": [\"value\",...],          (array of string) Transaction hashes of all transactions involving this address\n \"involvesWatchonly\": true|false, (boolean)         Unset\n},...]\n",
		"listsinceblock":          "listsinceblock (\"blockhash\" targetconfirmations=1 includewatchonly=false)\n\nReturns a JSON array of objects listing details of all wallet transactions after some block.\n\nArguments:\n1. blockhash           (string, optional)                 Hash of the parent block of the first block to consider transactions from, or unset to list all transactions\n2. targetconfirmations (numeric, optional, default=1)     Minimum number of block confirmations of the last block in the result object.  Must be 1 or greater.  Note: The transactions array in the result object is not affected by this parameter\n3. includewatchonly    (boolean, optional, default=false) Unused\n\nResult:\n{\n \"transactions\": [{                 (array of object) JSON array of objects containing verbose details of the each transaction\n  \"abandoned\": true|false,          (boolean)         Unset\n  \"account\": \"value\",               (string)          DEPRECATED -- Unset\n  \"address\": \"value\",               (string)          Payment address for a transaction output\n  \"amount\": n.nnn,                  (numeric)         The value of the transaction output valued in bitcoin\n  \"bip125-replaceable\": \"value\",    (string)          Unset\n  \"blockhash\": \"value\",             (string)          The hash of the block this transaction is mined in, or the empty string if unmined\n  \"blockindex\": n,                  (numeric)         Unset\n  \"blocktime\": n,                   (numeric)         The Unix time of the block header this transaction is mined in, or 0 if unmined\n  \"category\": \"value\",              (string)          The kind of transaction: \"send\" for sent transactions, \"immature\" for immature coinbase outputs, \"generate\" for mature coinbase outputs, or \"recv\" for all other received outputs.  Note: A single output may be included multiple times under different categories\n  \"confirmations\": n,               (numeric)         The number of block confirmations of the transaction\n  \"fee\": n.nnn,                     (numeric)         The total input value minus the total output value for sent transactions\n  \"generated\": true|false,          (boolean)         Whether the transaction output is a coinbase output\n  \"involveswatchonly\": true|false,  (boolean)         Unset\n  \"time\": n,                        (numeric)         The earliest Unix time this transaction was known to exist\n  \"timereceived\": n,                (numeric)         The earliest Unix time this transaction was known to exist\n  \"trusted\": true|false,            (boolean)         Unset\n  \"txid\": \"value\",                  (string)          The hash of the transaction\n  \"vout\": n,                        (numeric)         The transaction output index\n  \"walletconflicts\": [\"value\",...], (array of string) Unset\n  \"comment\": \"value\",               (string)          Unset\n  \"otheraccount\": \"value\",          (string)          Unset\n },...],                                              \n \"lastblock\": \"value\",              (string)          Hash of the latest-synced block to be used in later calls to listsinceblock\n}                                   \n",
		"listtransactions":        "listtransactions (\"account\" count=10 from=0 includewatchonly=false)\n\nReturns a JSON array of objects containing verbose details for wallet transactions.\n\nArguments:\n1. account          (string, optional)                 DEPRECATED -- Unused (must be unset or \"*\")\n2. count            (numeric, optional, default=10)    Maximum number of transactions to create results from\n3. from             (numeric, optional, default=0)     Number of transactions to skip before results are created\n4. includewatchonly (boolean, optional, default=false) Unused\n\nResult:\n[{\n \"abandoned\": true|false,          (boolean)         Unset\n \"account\": \"value\",               (string)          DEPRECATED -- Unset\n \"address\": \"value\",               (string)          Payment address for a transaction output\n \"amount\": n.nnn,                  (numeric)         The value of the transaction output valued in bitcoin\n \"bip125-replaceable\": \"value\",    (string)          Unset\n \"blockhash\": \"value\",             (string)          The hash of the block this transaction is mined in, or the empty string if unmined\n \"blockindex\": n,                  (numeric)         Unset\n \"blocktime\": n,                   (numeric)         The Unix time of the block header this transaction is mined in, or 0 if unmined\n \"category\": \"value\",              (string)          The kind of transaction: \"send\" for sent transactions, \"immature\" for immature coinbase outputs, \"generate\" for mature coinbase outputs, or \"recv\" for all other received outputs.  Note: A single output may be included multiple times under different categories\n \"confirmations\": n,               (numeric)         The number of block confirmations of the transaction\n \"fee\": n.nnn,                     (numeric)         The total input value minus the total output value for sent transactions\n \"generated\": true|false,          (boolean)         Whether the transaction output is a coinbase output\n \"involveswatchonly\": true|false,  (boolean)         Unset\n \"time\": n,                        (numeric)         The earliest Unix time this transaction was known to exist\n \"timereceived\": n,                (numeric)         The earliest Unix time this transaction was known to exist\n \"trusted\": true|false,            (boolean)         Unset\n \"txid\": \"value\",                  (string)          The hash of the transaction\n \"vout\": n,                        (numeric)         The transaction output index\n \"walletconflicts\": [\"value\",...], (array of string) Unset\n \"comment\": \"value\",               (string)          Unset\n \"otheraccount\": \"value\",          (string)          Unset\n},...]\n",
		"listunspent":             "listunspent (minconf=1 maxconf=9999999 [\"address\",...])\n\nReturns a JSON array of objects representing unlocked unspent outputs controlled by wallet keys.\n\nArguments:\n1. minconf   (numeric, optional, default=1)       Minimum number of block confirmations required before a transaction output is considered\n2. maxconf   (numeric, optional, default=9999999) Maximum number of block confirmations required before a transaction output is excluded\n3. addresses (array of string, optional)          If set, limits the returned details to unspent outputs received by any of these payment addresses\n\nResult:\n{\n \"txid\": \"value\",         (string)  The transaction hash of the referenced output\n \"vout\": n,               (numeric) The output index of the referenced output\n \"address\": \"value\",      (string)  The payment address that received the output\n \"account\": \"value\",      (string)  The account associated with the receiving payment address\n \"scriptPubKey\": \"value\", (string)  The output script encoded as a hexadecimal string\n \"redeemScript\": \"value\", (string)  Unset\n \"amount\": n.nnn,         (numeric) The amount of the output valued in bitcoin\n \"confirmations\": n,      (numeric) The number of block confirmations of the transaction\n \"spendable\": true|false, (boolean) Whether the output is entirely controlled by wallet keys/scripts (false for partially controlled multisig outputs or outputs to watch-only addresses)\n}                         \n",
		"lockunspent":             "lockunspent unlock [{\"txid\":\"value\",\"vout\":n},...]\n\nLocks or unlocks an unspent output.\nLocked outputs are not chosen for transaction inputs of authored transactions and are not included in 'listunspent' results.\nLocked outputs are volatile and are not saved across wallet restarts.\nIf unlock is true and no transaction outputs are specified, all locked outputs are marked unlocked.\n\nArguments:\n1. unlock       (boolean, required)         True to unlock outputs, false to lock\n2. transactions (array of object, required) Transaction outputs to lock or unlock\n[{\n \"txid\": \"value\", (string)  The transaction hash of the referenced output\n \"vout\": n,       (numeric) The output index of the referenced output\n},...]\n\nResult:\ntrue|false (boolean) The boolean 'true'\n",
		"validateaddress":         "validateaddress \"address\"\n\nVerify that an address is valid.\nExtra details are returned if the address is controlled by this wallet.\nThe following fields are valid only when the address is controlled by this wallet (ismine=true): isscript, pubkey, iscompressed, account, addresses, hex, script, and sigsrequired.\nThe following fields are only valid when address has an associated public key: pubkey, iscompressed.\nThe following fields are only valid when address is a pay-to-script-hash address: addresses, hex, and script.\nIf the address is a multisig address controlled by this wallet, the multisig fields will be left unset if the wallet is locked since the redeem script cannot be decrypted.\n\nArguments:\n1. address (string, required) Address to validate\n\nResult:\n{\n \"isvalid\": true|false,      (boolean)         Whether or not the address is valid\n \"address\": \"value\",         (string)          The payment address (only when isvalid is true)\n \"ismine\": true|false,       (boolean)         Whether this address is controlled by the wallet (only when isvalid is true)\n \"iswatchonly\": true|false,  (boolean)         Unset\n \"isscript\": true|false,     (boolean)         Whether the payment address is a pay-to-script-hash address (only when isvalid is true)\n \"pubkey\": \"value\",          (string)          The associated public key of the payment address, if any (only when isvalid is true)\n \"iscompressed\": true|false, (boolean)         Whether the address was created by hashing a compressed public key, if any (only when isvalid is true)\n \"account\": \"value\",         (string)          The account this payment address belongs to (only when isvalid is true)\n \"addresses\": [\"value\",...], (array of string) All associated payment addresses of the script if address is a multisig address (only when isvalid is true)\n \"hex\": \"value\",             (string)          The redeem script \n \"script\": \"value\",          (string)          The class of redeem script for a multisig address\n \"sigsrequired\": n,          (numeric)         The number of required signatures to redeem outputs to the multisig address\n}                            \n",
		"walletlock":              "walletlock\n\nLock the wallet.\n\nArguments:\nNone\n\nResult:\nNothing\n",
		"walletpassphrase":        "walletpassphrase \"passphrase\" timeout\n\nUnlock the wallet.\n\nArguments:\n1. passphrase (string, required)  The wallet passphrase\n2. timeout    (numeric, required) The number of seconds to wait before the wallet automatically locks\n\nResult:\nNothing\n",
		"walletpassphrasechange":  "walletpassphrasechange \"oldpassphrase\" \"newpassphrase\"\n\nChange the wallet passphrase.\n\nArguments:\n1. oldpassphrase (string, required) The old wallet passphrase\n2. newpassphrase (string, required) The new wallet passphrase\n\nResult:\nNothing\n",
		"getbestblock":            "getbestblock\n\nReturns the hash and height of the newest block in the best chain that wallet has finished syncing with.\n\nArguments:\nNone\n\nResult:\n{\n \"hash\": \"value\", (string)  The hash of the block\n \"height\": n,     (numeric) The blockchain height of the block\n}                 \n",
		"getunconfirmedbalance":   "getunconfirmedbalance (\"account\")\n\nCalculates the unspent output value of all unmined transaction outputs for an account.\n\nArguments:\n1. account (string, optional) The account to query the unconfirmed balance for (default=\"default\")\n\nResult:\nn.nnn (numeric) Total amount of all unmined unspent outputs of the account valued in bitcoin.\n",
		"listaddresstransactions": "listaddresstransactions [\"address\",...] (\"account\")\n\nReturns a JSON array of objects containing verbose details for wallet transactions pertaining some addresses.\n\nArguments:\n1. addresses (array of string, required) Addresses to filter transaction results by\n2. account   (string, optional)          Unused (must be unset or \"*\")\n\nResult:\n[{\n \"abandoned\": true|false,          (boolean)         Unset\n \"account\": \"value\",               (string)          DEPRECATED -- Unset\n \"address\": \"value\",               (string)          Payment address for a transaction output\n \"amount\": n.nnn,                  (numeric)         The value of the transaction output valued in bitcoin\n \"bip125-replaceable\": \"value\",    (string)          Unset\n \"blockhash\": \"value\",             (string)          The hash of the block this transaction is mined in, or the empty string if unmined\n \"blockindex\": n,                  (numeric)         Unset\n \"blocktime\": n,                   (numeric)         The Unix time of the block header this transaction is mined in, or 0 if unmined\n \"category\": \"value\",              (string)          The kind of transaction: \"send\" for sent transactions, \"immature\" for immature coinbase outputs, \"generate\" for mature coinbase outputs, or \"recv\" for all other received outputs.  Note: A single output may be included multiple times under different categories\n \"confirmations\": n,               (numeric)         The number of block confirmations of the transaction\n \"fee\": n.nnn,                     (numeric)         The total input value minus the total output value for sent transactions\n \"generated\": true|false,          (boolean)         Whether the transaction output is a coinbase output\n \"involveswatchonly\": true|false,  (boolean)         Unset\n \"time\": n,                        (numeric)         The earliest Unix time this transaction was known to exist\n \"timereceived\": n,                (numeric)         The earliest Unix time this transaction was known to exist\n \"trusted\": true|false,            (boolean)         Unset\n \"txid\": \"value\",                  (string)          The hash of the transaction\n \"vout\": n,                        (numeric)         The transaction output index\n \"walletconflicts\": [\"value\",...], (array of string) Unset\n \"comment\": \"value\",               (string)          Unset\n \"otheraccount\": \"value\",          (string)          Unset\n},...]\n",
		"listalltransactions":     "listalltransactions (\"account\")\n\nReturns a JSON array of objects in the same format as 'listtransactions' without limiting the number of returned objects.\n\nArguments:\n1. account (string, optional) Unused (must be unset or \"*\")\n\nResult:\n[{\n \"abandoned\": true|false,          (boolean)         Unset\n \"account\": \"value\",               (string)          DEPRECATED -- Unset\n \"address\": \"value\",               (string)          Payment address for a transaction output\n \"amount\": n.nnn,                  (numeric)         The value of the transaction output valued in bitcoin\n \"bip125-replaceable\": \"value\",    (string)          Unset\n \"blockhash\": \"value\",             (string)          The hash of the block this transaction is mined in, or the empty string if unmined\n \"blockindex\": n,                  (numeric)         Unset\n \"blocktime\": n,                   (numeric)         The Unix time of the block header this transaction is mined in, or 0 if unmined\n \"category\": \"value\",              (string)          The kind of transaction: \"send\" for sent transactions, \"immature\" for immature coinbase outputs, \"generate\" for mature coinbase outputs, or \"recv\" for all other received outputs.  Note: A single output may be included multiple times under different categories\n \"confirmations\": n,               (numeric)         The number of block confirmations of the transaction\n \"fee\": n.nnn,                     (numeric)         The total input value minus the total output value for sent transactions\n \"generated\": true|false,          (boolean)         Whether the transaction output is a coinbase output\n \"involveswatchonly\": true|false,  (boolean)         Unset\n \"time\": n,                        (numeric)         The earliest Unix time this transaction was known to exist\n \"timereceived\": n,                (numeric)         The earliest Unix time this transaction was known to exist\n \"trusted\": true|false,            (boolean)         Unset\n \"txid\": \"value\",                  (string)          The hash of the transaction\n \"vout\": n,                        (numeric)         The transaction output index\n \"walletconflicts\": [\"value\",...], (array of string) Unset\n \"comment\": \"value\",               (string)          Unset\n \"otheraccount\": \"value\",          (string)          Unset\n},...]\n",
		"renameaccount":           "renameaccount \"oldaccount\" \"newaccount\"\n\nRenames an account.\n\nArguments:\n1. oldaccount (string, required) The old account name to rename\n2. newaccount (string, required) The new name for the account\n\nResult:\nNothing\n",
		"walletislocked":          "walletislocked\n\nReturns whether or not the wallet is locked.\n\nArguments:\nNone\n\nResult:\ntrue|false (boolean) Whether the wallet is locked\n",
	}
}

var localeHelpDescs = map[string]func() map[string]string{
	"en_US": helpDescsEnUS,
}

var requestUsages = "getbalance (\"account\" minconf=1)\ngetbestblockhash\ngetblockcount\ngetinfo\ngettransaction \"txid\" (includewatchonly=false)\nhelp (\"command\")\nkeypoolrefill (newsize=100)\nlistlockunspent\nlistreceivedbyaccount (minconf=1 includeempty=false includewatchonly=false)\nlistreceivedbyaddress (minconf=1 includeempty=false includewatchonly=false)\nlistsinceblock (\"blockhash\" targetconfirmations=1 includewatchonly=false)\nlisttransactions (\"account\" count=10 from=0 includewatchonly=false)\nlistunspent (minconf=1 maxconf=9999999 [\"address\",...])\nlockunspent unlock [{\"txid\":\"value\",\"vout\":n},...]\nvalidateaddress \"address\"\nwalletlock\nwalletpassphrase \"passphrase\" timeout\nwalletpassphrasechange \"oldpassphrase\" \"newpassphrase\"\ngetbestblock\ngetunconfirmedbalance (\"account\")\nlistaddresstransactions [\"address\",...] (\"account\")\nlistalltransactions (\"account\")\nrenameaccount \"oldaccount\" \"newaccount\"\nwalletislocked"
